/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-2xl: 96rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-medium: 500;
    --tracking-tighter: -0.05em;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-inter: "Inter", sans-serif;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .isolate {
    isolation: isolate;
  }
  .z-10 {
    z-index: 10;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .row-span-full {
    grid-row: 1 / -1;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-3 {
    grid-row-start: 3;
  }
  .row-start-5 {
    grid-row-start: 5;
  }
  .mr-0 {
    margin-right: calc(var(--spacing) * 0);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .min-h-dvh {
    min-height: 100dvh;
  }
  .w-41 {
    width: calc(var(--spacing) * 41);
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-rows-\[1fr_1px_auto_1px_auto\] {
    grid-template-rows: 1fr 1px auto 1px auto;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-24 {
    gap: calc(var(--spacing) * 24);
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-\[\#1D202A\] {
    border-color: #1D202A;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black\/5 {
    border-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .border-x-\(--pattern-fg\) {
    border-inline-color: var(--pattern-fg);
  }
  .border-x-\[\#ffffff1a\] {
    border-inline-color: #ffffff1a;
  }
  .border-x-white {
    border-inline-color: var(--color-white);
  }
  .border-x-white\/10 {
    border-inline-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-inline-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-gray-950 {
    background-color: var(--color-gray-950);
  }
  .bg-\[image\:repeating-linear-gradient\(315deg\,_\[\#ffffff1a\]_0\,_\[\#ffffff1a\]_1px\,_transparent_0\,_transparent_50\%\)\] {
    background-image: repeating-linear-gradient(315deg, [#ffffff1a] 0, [#ffffff1a] 1px, transparent 0, transparent 50%);
  }
  .bg-\[image\:repeating-linear-gradient\(315deg\,_var\(--pattern-fg\)_0\,_var\(--pattern-fg\)_1px\,_transparent_0\,_transparent_50\%\)\] {
    background-image: repeating-linear-gradient(315deg, var(--pattern-fg) 0, var(--pattern-fg) 1px, transparent 0, transparent 50%);
  }
  .bg-\[size\:10px_10px\] {
    background-size: 10px 10px;
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-14\.25 {
    padding-top: calc(var(--spacing) * 14.25);
  }
  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }
  .text-center {
    text-align: center;
  }
  .font-inter {
    font-family: var(--font-inter);
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .tracking-tighter {
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .text-cyan-400 {
    color: var(--color-cyan-400);
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-gray-950 {
    color: var(--color-gray-950);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .\[--gutter-width\:2\.5rem\] {
    --gutter-width: 2.5rem;
  }
  .\[--pattern-fg\:var\(--color-black\)\]\/5 {
    --pattern-fg: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --pattern-fg: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:-left-\[100vw\] {
    &::before {
      content: var(--tw-content);
      left: calc(100vw * -1);
    }
  }
  .before\:h-px {
    &::before {
      content: var(--tw-content);
      height: 1px;
    }
  }
  .before\:w-\[200vw\] {
    &::before {
      content: var(--tw-content);
      width: 200vw;
    }
  }
  .before\:bg-gray-950\/5 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(13% 0.028 261.692) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
      }
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:bottom-0 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .after\:-left-\[100vw\] {
    &::after {
      content: var(--tw-content);
      left: calc(100vw * -1);
    }
  }
  .after\:h-px {
    &::after {
      content: var(--tw-content);
      height: 1px;
    }
  }
  .after\:w-\[200vw\] {
    &::after {
      content: var(--tw-content);
      width: 200vw;
    }
  }
  .after\:bg-gray-950\/5 {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(13% 0.028 261.692) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
      }
    }
  }
  .sm\:gap-40 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 40);
    }
  }
  .md\:col-start-2 {
    @media (width >= 48rem) {
      grid-column-start: 2;
    }
  }
  .md\:col-start-3 {
    @media (width >= 48rem) {
      grid-column-start: 3;
    }
  }
  .md\:-mx-4 {
    @media (width >= 48rem) {
      margin-inline: calc(var(--spacing) * -4);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:grid-cols-\[var\(--gutter-width\)_minmax\(0\,var\(--breakpoint-2xl\)\)_var\(--gutter-width\)\] {
    @media (width >= 48rem) {
      grid-template-columns: var(--gutter-width) minmax(0,var(--breakpoint-2xl)) var(--gutter-width);
    }
  }
  .md\:pb-40 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 40);
    }
  }
  .lg\:mx-0 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .dark\:border-\[\#1D202A\] {
    @media (prefers-color-scheme: dark) {
      border-color: #1D202A;
    }
  }
  .dark\:border-white\/10 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .dark\:\[--pattern-fg\:var\(--color-white\)\]\/10 {
    @media (prefers-color-scheme: dark) {
      --pattern-fg: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --pattern-fg: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:before\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:after\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
}
h1 {
  color: #1D202A;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-outline-style: solid;
      --tw-content: "";
    }
  }
}
